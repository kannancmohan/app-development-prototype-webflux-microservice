openapi: 3.0.3
info:
  version: 1.0.0
  title: Swagger Petstore
  description: APIs for fetching pet related information

servers:
  - url: http://localhost:8881
tags:
  - name: Prototype
    description: Please use tags name starting with capitals
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - Prototype
      x-webclient-blocking: true # add this to make response
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/UnexpectedError"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - Prototype
      x-webclient-blocking: true # add this to make response
      responses:
        "201":
          description: Null response
        "500":
          $ref: "#/components/responses/UnexpectedError"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - Prototype
      x-webclient-blocking: true # add this to make response
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "500":
          $ref: "#/components/responses/UnexpectedError"
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        dateOfBirth:
          type: string
          format: date
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
  responses:
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Request syntax is invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Not authorized to view this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnexpectedError:
      description: Unexpected Server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
